import React from"react";pre.tabSize=2;const crEl=React.createElement,crFr=React.Fragment,getID=()=>Date.now()+""+Math.random(),createSpaces=(t,e=pre.tabSize)=>[...Array(t*e)].reduce(t=>t+" ",""),findTabs=(t,e=pre.tabSize)=>{if(2===e)return t.match(/ {2}/g);if(3===e)return t.match(/ {3}/g);if(4===e)return t.match(/ {4}/g);throw new Error("A number of tabs must be in range 2-4 inclusive!")};function setAttributes(t){const e=t.slice(t.indexOf("(")+1,t.indexOf(") ")),r=e.match(/\w*=".*?"/g)||[];e.split(/\w*=".*?"/).map(t=>{t.trim().split(" ").map(t=>{t&&r.push(`${t}=""`)})});const n={};return r.map(t=>{let[e,r]=t.split("=");r=r.replace(/"/g,""),Object.defineProperty(n,e,{value:r||!0,enumerable:!0})}),n.key=getID(),n}function getValues(t){let e=t.match(/#\[.*?\]/g),r=[];e.reduce((t,n,i)=>{const c=t.split(n);return n=n.slice(2,-1),r.push(c[0],n),i===e.length-1&&r.push(c[1]),c[1]},t);const[n,...i]=r.filter(t=>t);return{first:n,preTail:i}}function splitRow(t,e,r){const n=t.match(/^\w*\(.*?\) .*/)||"",i=t.match(/^\w*\(.*?\)$/)||"",c=t.match(/#\[.*?\]/)||"";let l=t.slice(0,t.indexOf("(")),a=t.slice(t.indexOf("(")+1,t.indexOf(")")),s=t.slice(t.indexOf(")")+2),u=[""];if(n&&c){const t=getValues(s);[s,u]=[t.first,t.preTail]}else n&&!c||(i?s=null:[l,a,s]=[null,null,t]);a&&(a=setAttributes(t));const o=createSpaces(e+1);return(u=u.reduce((t,e)=>t+o+e+"\n","")).trim()&&(r=u+r),{tag:l,attrs:a,val:s,tail:r}}function slicer(t){const e=t.indexOf("\n");let r,n;[r,n]=-1===e?[t,null]:[t.slice(0,e),t.slice(e+1)];let i=findTabs(r);return{tab:i=i?i.length:0,...splitRow(r=r.trim(),i,n)}}function pre(t){let e,r,n,i;return function t(c){const{tab:l,tag:a,attrs:s,val:u,tail:o}=slicer(c);if(o)return t(o),e>l?n=[crEl(a,s,u,...n)]:e===l?n=[a?crEl(a,s,u):u,...n]:(i=n,n=l===(r=e)?[]:a?[crEl(a,s,u)]:[u]),l===r&&(n=[...n,...i],r=void 0),e=l,crEl(crFr,null,...n);n=a?[crEl(a,s,u)]:[u],e=l}(t=t.trim())}export default pre;